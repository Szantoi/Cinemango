// <auto-generated />
using System;
using Cinemango.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cinemango.Data.Migrations
{
    [DbContext(typeof(MoziDbContext))]
    partial class MoziDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cinemango.Data.Entitis.Felhasznalo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Felhasznalo");
                });

            modelBuilder.Entity("Cinemango.Data.Entitis.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Boritokep")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Cim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElozetesURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EredetiCim")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImdbID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeirasHTML")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("kiadasEve")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Film");
                });

            modelBuilder.Entity("Cinemango.Data.Entitis.Jegy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Ar")
                        .HasColumnType("int");

                    b.Property<int?>("TipusId")
                        .HasColumnType("int");

                    b.Property<int>("UlohelyId")
                        .HasColumnType("int");

                    b.Property<int?>("VasarlasId")
                        .HasColumnType("int");

                    b.Property<int>("VetitesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipusId");

                    b.HasIndex("VasarlasId");

                    b.HasIndex("VetitesId");

                    b.HasIndex("UlohelyId", "VasarlasId")
                        .IsUnique()
                        .HasFilter("[VasarlasId] IS NOT NULL");

                    b.ToTable("Jegy");
                });

            modelBuilder.Entity("Cinemango.Data.Entitis.JegyTipus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Ar")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("JegyTipus");
                });

            modelBuilder.Entity("Cinemango.Data.Entitis.Terem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Terem");
                });

            modelBuilder.Entity("Cinemango.Data.Entitis.Ulohely", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Oldal")
                        .HasColumnType("int");

                    b.Property<int>("Sor")
                        .HasColumnType("int");

                    b.Property<int>("Szek")
                        .HasColumnType("int");

                    b.Property<int>("TeremId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeremId", "Oldal", "Sor", "Szek");

                    b.ToTable("Ulohely");
                });

            modelBuilder.Entity("Cinemango.Data.Entitis.Vasarlas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("FelhasznaloId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FelhasznaloId");

                    b.ToTable("Vasarlas");
                });

            modelBuilder.Entity("Cinemango.Data.Entitis.Vetites", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Idopont")
                        .HasColumnType("datetime2");

                    b.Property<int>("TeremId")
                        .HasColumnType("int");

                    b.Property<int>("Tipus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FilmId");

                    b.HasIndex("TeremId");

                    b.ToTable("Vetites");
                });

            modelBuilder.Entity("Cinemango.Data.Entitis.Jegy", b =>
                {
                    b.HasOne("Cinemango.Data.Entitis.JegyTipus", "Tipus")
                        .WithMany("Jegyek")
                        .HasForeignKey("TipusId");

                    b.HasOne("Cinemango.Data.Entitis.Ulohely", "Ulohely")
                        .WithMany("Jegyek")
                        .HasForeignKey("UlohelyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cinemango.Data.Entitis.Vasarlas", "Vasarlas")
                        .WithMany("Jegyek")
                        .HasForeignKey("VasarlasId");

                    b.HasOne("Cinemango.Data.Entitis.Vetites", "Vetites")
                        .WithMany("Jegyek")
                        .HasForeignKey("VetitesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tipus");

                    b.Navigation("Ulohely");

                    b.Navigation("Vasarlas");

                    b.Navigation("Vetites");
                });

            modelBuilder.Entity("Cinemango.Data.Entitis.Ulohely", b =>
                {
                    b.HasOne("Cinemango.Data.Entitis.Terem", "Terem")
                        .WithMany("Ulohelyek")
                        .HasForeignKey("TeremId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Terem");
                });

            modelBuilder.Entity("Cinemango.Data.Entitis.Vasarlas", b =>
                {
                    b.HasOne("Cinemango.Data.Entitis.Felhasznalo", "Felhasznalo")
                        .WithMany("Vasarlasoks")
                        .HasForeignKey("FelhasznaloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Felhasznalo");
                });

            modelBuilder.Entity("Cinemango.Data.Entitis.Vetites", b =>
                {
                    b.HasOne("Cinemango.Data.Entitis.Film", "Film")
                        .WithMany("Vetitesek")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cinemango.Data.Entitis.Terem", "Terem")
                        .WithMany("Vetitesek")
                        .HasForeignKey("TeremId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Film");

                    b.Navigation("Terem");
                });

            modelBuilder.Entity("Cinemango.Data.Entitis.Felhasznalo", b =>
                {
                    b.Navigation("Vasarlasoks");
                });

            modelBuilder.Entity("Cinemango.Data.Entitis.Film", b =>
                {
                    b.Navigation("Vetitesek");
                });

            modelBuilder.Entity("Cinemango.Data.Entitis.JegyTipus", b =>
                {
                    b.Navigation("Jegyek");
                });

            modelBuilder.Entity("Cinemango.Data.Entitis.Terem", b =>
                {
                    b.Navigation("Ulohelyek");

                    b.Navigation("Vetitesek");
                });

            modelBuilder.Entity("Cinemango.Data.Entitis.Ulohely", b =>
                {
                    b.Navigation("Jegyek");
                });

            modelBuilder.Entity("Cinemango.Data.Entitis.Vasarlas", b =>
                {
                    b.Navigation("Jegyek");
                });

            modelBuilder.Entity("Cinemango.Data.Entitis.Vetites", b =>
                {
                    b.Navigation("Jegyek");
                });
#pragma warning restore 612, 618
        }
    }
}
